schema {
  query: Query
  mutation: Mutation
}
input AddressInput {
  email: String!
  person_id: Int!
}

input UpdateAddressInput {
  email: String!
  id: Int!
}

type Address {
  id: Int!
  email: String!
  person_id: Int!
}
type Person {
  id: Int!
  name: String!
  addresses: [Address]!
}
type Profile {
  userId: String!
  profileId: String!
  gender: String!
}

type User {
  userId: String!
  username: String!
  profile: Profile
}

type ErrorType {
  field: String!
  message: String!
}

type RegisterUser {
  user: User
  error: ErrorType
}
type ProfileResponse {
  profile: Profile
  error: ErrorType
}

type ProfileObjectTYpe {
  profile: Profile
  error: ErrorType
}

type AddressType {
  error: ErrorType
  address: Address
}
type PersonType {
  error: ErrorType
  person: Person
}
type Query {
  user(userId: String!): RegisterUser!
  profile(profileId: String!): ProfileObjectTYpe
  hello(username: String): String
  getPerson(id: Int!): PersonType
}

type Mutation {
  register(username: String!): RegisterUser!
  createProfile(gender: String!, userId: String!): ProfileResponse!

  createAddress(input: AddressInput!): AddressType!
  createPerson(name: String!): PersonType!
  updateAddress(input: UpdateAddressInput!): AddressType!
  deletePerson(id: Int!): Boolean!
}
